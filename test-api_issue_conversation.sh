curl -XPOST 127.0.0.1:8000/api/issue_chat -H "Content-Type: application/json" --data '{"conversation_history": [],"ask": "Hi","investigation_result": {"result": "# Alert Explanation\nThe alert \"KubePodNotReady\" indicates that the pod `kafka-consumer` in the `default` namespace has been in a non-ready state for more than 15 minutes.\n\n# Investigation\n1. The logs for the `kafka-consumer` pod were checked, but no logs were available, indicating that the pod may not have started successfully.\n2. The previous logs command also failed, stating that the previous terminated container was not found.\n3. The pods description shows that it is in a `Failed` state, with the container having exited with an `Unknown` reason and an exit code of `255`. The pod was scheduled successfully, but it is not ready, and the container is not running.\n\n# Conclusions and Possible Root Causes\n1. The `kafka-consumer` pod has failed to start properly, as indicated by its `Failed` status and the exit code `255`, which typically suggests an issue with the containers execution.\n2. There are no events associated with the pod that could provide additional context on why it failed.\n3. The containers command is set to `sleep infinity`, which should keep it running indefinitely, but it terminated unexpectedly.\n\n# Next Steps\n1. Investigate the container image `docker.io/bitnami/kafka:3.9.0-debian-12-r1` to ensure it is functioning correctly and compatible with your environment.\n2. Check for any resource limits or configurations that might be affecting the pods ability to start.\n3. Consider redeploying the pod or checking the deployment configuration for any misconfigurations.\n4. You can also try running the container manually to see if it provides any additional error messages:\n   ```bash\n   docker run --rm docker.io/bitnami/kafka:3.9.0-debian-12-r1 sleep infinity\n   ```","tools": [{"name": "kubectl_logs","description": "kubectl logs kafka-consumer -n default","output": "stdout:\n\nstderr:\n"},{"name": "kubectl_previous_logs","description": "kubectl logs kafka-consumer -n default --previous","output": "Command `kubectl logs kafka-consumer -n default --previous` failed with return code 1\nstdout:\n\nstderr:\nError from server (BadRequest): previous terminated container \"kafka-consumer\" in pod \"kafka-consumer\" not found\n"},{"name": "kubectl_describe","description": "kubectl describe pod kafka-consumer -n default","output": "stdout:\nName:             kafka-consumer\nNamespace:        default\nPriority:         0\nService Account:  default\nNode:             grafana-cloud-control-plane/172.18.0.2\nStart Time:       Wed, 11 Dec 2024 10:06:27 +0000\nLabels:           run=kafka-consumer\nAnnotations:      <none>\nStatus:           Failed\nIP:               \nIPs:              <none>\nContainers:\n  kafka-consumer:\n    Container ID:  containerd://e4b82230c8fd371337830eddf8aa68c96ef5a8c13891ecec9120e46fa5f67451\n    Image:         docker.io/bitnami/kafka:3.9.0-debian-12-r","result": "# Alert1\n    Image ID:      docker.io/bitnami/kafka@sha256:9b38734577ac16445cc49db93f41a8f7effca24aa9cbcdd798edbdbb418e0601\n    Port:          <none>\n    Host Port:     <none>\n    Command:\n      sleep\n      infinity\n    State:          Terminated\n      Reason:       Unknown\n      Exit Code:    255\n      Started:      Wed, 11 Dec 2024 10:06:28 +0000\n      Finished:     Thu, 12 Dec 2024 05:23:00 +0000\n    Ready:          False\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-2xk87 (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   False \n  Initialized                 True \n  Ready                       False \n  ContainersReady             False \n  PodScheduled                True \nVolumes:\n  kube-api-access-2xk87:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:                      <none>\n\nstderr:\n"}]},"issue_type": "KubePodNotReady"}'
